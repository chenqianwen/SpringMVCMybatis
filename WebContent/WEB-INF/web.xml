<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>SpringMVCMybatis</display-name>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 指定配置文件位置，contextConfigLocation是ContextLoaderListener中的一个参数，
	 通过该参数在ContextLoaderListener中加载applicationContext-*.xml,并装配ApplicationContext  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value></param-value>
	</context-param>

	<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<!-- contextConfigLocation配置springmvc加载的配置文件(配置处理映射器，适配器) 如果不配置
		，默认加载/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml) -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 1.*.action 访问以.action结果的DispactherServlet进行解析 2./ 所有的地址都有DispatcherServlet进行鸡西，对于静态文件的解析需要配置不让DispathcerServlet进行解析 
			使用此种方式可以实现RESTful风格的url 3./* 这样配置不对，最终要转发到jsp页面时,仍然会由DispatcherServlet解析jsp地址 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
</web-app>